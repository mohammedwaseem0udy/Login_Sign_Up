<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="description" content="">
  <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
  <meta name="generator" content="Hugo 0.108.0">
  <title>Login</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
  <!-- Favicons -->
  <link rel="apple-touch-icon" href="/docs/5.3/assets/img/favicons/apple-touch-icon.png" sizes="180x180">
  <link rel="icon" href="/docs/5.3/assets/img/favicons/favicon-32x32.png" sizes="32x32" type="image/png">
  <link rel="icon" href="/docs/5.3/assets/img/favicons/favicon-16x16.png" sizes="16x16" type="image/png">
  <link rel="manifest" href="/docs/5.3/assets/img/favicons/manifest.json">
  <link rel="mask-icon" href="/docs/5.3/assets/img/favicons/safari-pinned-tab.svg" color="#712cf9">
  <link rel="icon" href="/docs/5.3/assets/img/favicons/favicon.ico">
  <meta name="theme-color" content="#712cf9">
  <style>
    .bd-placeholder-img {
      font-size: 1.125rem;
      text-anchor: middle;
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
    }

    @media (min-width: 768px) {
      .bd-placeholder-img-lg {
        font-size: 3.5rem;
      }
    }

    .b-example-divider {
      height: 3rem;
      background-color: rgba(0, 0, 0, .1);
      border: solid rgba(0, 0, 0, .15);
      border-width: 1px 0;
      box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .b-example-vr {
      flex-shrink: 0;
      width: 1.5rem;
      height: 100vh;
    }

    .bi {
      vertical-align: -.125em;
      fill: currentColor;
    }

    .nav-scroller {
      position: relative;
      z-index: 2;
      height: 2.75rem;
      overflow-y: hidden;
    }

    .nav-scroller .nav {
      display: flex;
      flex-wrap: nowrap;
      padding-bottom: 1rem;
      margin-top: -1px;
      overflow-x: auto;
      text-align: center;
      white-space: nowrap;
      -webkit-overflow-scrolling: touch;
    }
  </style>


  <!-- Custom styles for this template -->
  <link href="/css/styles.css" rel="stylesheet">
</head>

<body class="text-center">
  <div class="loader">
    <img class="loader-center" src="/images/loading.svg" width="72" height="57">
  </div>
  <main class="form w-100 m-auto">
    <div class="card bg-danger text-white mb-3 error-box">
      <div class="card-body error-box-content">
      </div>
    </div>
    <form action="/validate-login-user" method="post">
      <img class="mb-4" src="/images/login-svgrepo-com.svg" alt="" width="72" height="57">
      <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

      <div class="form-floating">
        <input name="email" type="email" class="form-control" id="floatingInput" placeholder="name@example.com"
          required="true">
        <label for="floatingInput">Email address</label>
      </div>
      <div class="form-floating">
        <input name="password" type="password" class="form-control" id="floatingPassword" placeholder="Password"
          required="true">
        <label for="floatingPassword">Password</label>
      </div>
      <button class="w-100 btn btn-lg btn-primary" type="submit">Sign in</button>
      <div class="mb-3">
        <label>
          <a href="/signup">Not a memeber ? Sign up now..</a>
        </label>
      </div>
    </form>
    <script>
        let errorBox = document.querySelector(".error-box");
        let errorBoxContext = document.querySelector(".error-box-content");
        let form = document.querySelector("form");
        let button = document.querySelector("button");
        let loader = document.querySelector(".loader");
        let errormsg = "";

        form.addEventListener("submit", async function(e) {
            e.preventDefault();
            button.style.opacity = 0.6;
            loader.style.zIndex = 100;
            errormsg = "";
            errorBox.style.visibility = 'hidden';
            let email = form.email.value;
            let password = form.password.value;
            try {
              let response = await fetch("/validate-login-user", {
                  method: "POST",
                  headers: {
                      "Content-Type": "application/json",
                  },
                  body: JSON.stringify({email, password})
              })
              let json = await response.json();
              if(json.hasOwnProperty('error')) {
                  let error = json.error;
                  errorBoxContext.textContent = error;
                  errorBox.style.visibility = 'visible';
                  button.style.opacity = 1;
                  loader.style.zIndex = -1;
              } else if(json.hasOwnProperty('user')) {
                  button.style.opacity = 1;
                  loader.style.zIndex = -1;
                  location.assign('/');
              } else {
                let error = new Error('Something went wrong. Contact support.');
                throw error;
              }
            }

            catch(err) {
              errorBoxContext.textContent = err.message;
              errorBox.style.visibility = 'visible';
              button.style.opacity = 1;
              loader.style.zIndex = -1;
            }

        });
    </script>
  </main>
</body>

</html>